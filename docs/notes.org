* Plan

** Goal
Take this text and do something good with it -- something which is maximally informative to the user:
#+BEGIN_QUOTE
“ತಿರುಕನೋರ್ವನೂರ ಮುಂದೆ
ಮುರುಕು ಧರ್ಮಶಾಲೆಯಲ್ಲಿ
ಒರಗಿರುತ್ತಲೊಂದು ಕನಸು ಕಂಡನೆಂತೆನೆ”!
ಪುರದ ರಾಜಸತ್ತನವಗೆ
ವರಕುಮಾರರಿಲ್ಲದಿರಲು
ಕರಿಯ ಕೈಗೆ ಕುಸುಮಮಾಲೆಯಿತ್ತು ಪುರದೊಳು

api ca:

pāṇi-grahe pulakitaṃ vapur aiśaṃ bhūti-bhūṣitaṃ jayati |
aṅkurita iva mano-bhūr yasmin bhasmāvaśeṣo 'pi ||GAss_*1||

GG-LGL-LLG / LLG-GG-LGL-GLL-L //
GLL-LLLL-GG / GG-GG-L-GG-L

इत्थं वृषाचलपतेरिह सुप्रभातम्
ये मानवाः प्रतिदिनं पठितुं प्रवृत्ताः ।
तेषां प्रभातसमये स्मृतिरङ्गभाजां
प्रज्ञां परार्थसुलभां परमां प्रसूते ॥ २९॥

 ॥ iti veṅkaṭeśasuprabhātam ॥

 ॥ atha veṅkaṭeśastotram ॥

kamalākucacūcukakuṅkumato
niyatāruṇitātulanīlatano ।
kamalāyatalocana lokapate
vijayī bhava veṅkaṭaśailapate ॥ 1॥
#+END_QUOTE

There are a bunch of challenges here:
- recognizing breaks between verses
- transliteration, while keeping the punctuation

** Components

Text -> Break into verses -> turn into a sequence of [non-sounds | {scanned syllables}]
These {scanned syllables} result in a scansion like GGLGLLLG....
Look for patterns in them.
Check against vṛttas.
Know the pattern (even if one hasn't been recorded).
*Show* the most likely patterns (in order of likelihood).
Show all the names for each pattern/metre (if recorded, per source).

** Options

- User input and output transliterations (primary and secondary)
- How to indicate chandas (L/G, 1/2, na/nA, la/gam, ।/ऽ, ˘/–)


* Other efforts

https://github.com/ramprax/sanskrit-chandas-ganas
https://github.com/gaudha/chandas
https://github.com/sanskrit/chandas
https://github.com/vipranarayan14/vchandas = https://vipranarayan14.github.io/vchandas-web/ (the author should be added to sanskrit-programmers@: https://github.com/vipranarayan14?tab=repositories )
https://github.com/sanskrit-coders/Chandas
https://github.com/ubcsanskrit/dphil/blob/master/vendor/metrical_data.yml (

* Translipi

HTML replace text without changing formatting etc (for my own "translipi"):

https://stackoverflow.com/questions/8276113/what-is-the-best-approach-to-search-some-text-in-body-html

https://stackoverflow.com/questions/4489119/jquery-javascript-search-dom-for-text-and-insert-html

Example extensions: 

https://chrome.google.com/webstore/detail/translate-selected-text/fbimffnjoeobhjhochngikepgfejjmgj?hl=en
source code at https://github.com/avm99963/translateselectedtext/issues (MIT License)

Possibly useful: https://stackoverflow.com/questions/19164474/chrome-extension-get-selected-text

https://9to5google.com/2015/06/14/how-to-make-a-chrome-extensions/ -- this actually looks useful. Can loop over all nodes and their children, and for each node, check wheher node.NodeType == node.TEXT_NODE (i.e. 3)

From https://github.com/shreevatsa/devanetra/blob/master/notes.org
#+BEGIN_QUOTE
Transliteration code already exists:
- [[http://shreevatsa.appspot.com/sanskrit/transliterate.html][my script]] from 2010 or earlier
- [[sanscript.js][https://github.com/sanskrit/sanscript.js]]
- [[https://github.com/mbykov/salita][salita]]

Chrome extension:
Reading https://developer.chrome.com/extensions now.

Looks like we just need to [[https://developer.chrome.com/extensions/contextMenus][add a context menu]] and then we can execute arbitrary JS code in the ~onClicked~ callback, with the reference to the ~selectionText~.

See also google search results:
https://stackoverflow.com/questions/12424631/get-selected-text-in-a-chrome-extension
https://stackoverflow.com/questions/19414751/chrome-extension-determining-selection-text-or-page-in-context-menu
https://tomoprogramming.blogspot.com/2013/08/simple-tutorial-for-chrome-extension.html
https://stackoverflow.com/questions/4376167/text-selection-and-display-in-context-menu-chrome-extension

The problem is replacement, as the selected text can span multiple divs in different styles.

It also looks like we need a [[https://developer.chrome.com/extensions/overview#contentScripts][content script]].

But note that [[https://developer.chrome.com/extensions/content_scripts][content scripts]] cannot directly call the Chrome API (like attaching a handler to the context menu onclick), so we also need an [[https://developer.chrome.com/extensions/event_pages][event page]] (see point 7 on that page, about context menus).

We might be able to use [[https://developer.chrome.com/extensions/activeTab][activeTab permission]] instead of asking for permissions on all pages.

See samples at [[https://developer.chrome.com/extensions/samples][Sample Extensions]].
#+END_QUOTE
